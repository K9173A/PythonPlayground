
#############################################
# map
#############################################
my_list = ['foo', 'bar', 'baz']

# Применяет функцию `str.upper` к каждому элементу из `my_list`.
map_obj = map(str.upper, my_list)

# В Python3 возвращается объект map, который нужно конвертировать в список.
print(list(map_obj))

#############################################
# filter
#############################################
numbers = [2, 5, 8, 44, 76, 87, 23, 24, 11]

# Отфильтровывает только чётные числа из списка `numbers`.
filter_obj = filter(lambda a: a % 2 == 0, numbers)

# В Python3 возвращается объект filter, который нужно конвертировать в список.
print(list(filter_obj))

#############################################
# zip
#############################################
first_names = ['John', 'Andrew', 'Mike']
last_names = ['Doe', 'Black', 'Green']

# Объединяет два списка в один. Каждый элементом является tuple из имени и фамилии.
# [('John', 'Doe'), ('Andrew', 'Black'), ('Mike', 'Green')]
zipped_obj = zip(first_names, last_names)

# В Python3 возвращается объект zip, который нужно конвертировать в список.
print(list(zipped_obj))

#############################################
# any
#############################################
numbers_2 = [0, 0, 0, 0, 0, 1, 0]

# Проверяет, есть ли в списке хотя бы один элемент, который равен True.
# 1 конвертируется в True.
contains_one = any(numbers_2)

print(contains_one)

#############################################
# all
#############################################
numbers_3 = [1, 1, 1, 1, 1, 1, 1]

# Проверяет, равны ли все элементы True. 0 конвертируется в False.
only_ones = all(numbers_3)

print(only_ones)
